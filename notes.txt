Rendu attendu :
$>./computor "5 * X^0 + 4 * X^1 - 9.3 * X^2 = 1 * X^0"
Reduced form: 4 * X^0 + 4 * X^1 - 9.3 * X^2 = 0
Polynomial degree: 2
Discriminant is strictly positive, the two solutions are:
0.905239
-0.475131
$>./computor "5 * X^0 + 4 * X^1 = 4 * X^0"
Reduced form: 1 * X^0 + 4 * X^1 = 0
Polynomial degree: 1
The solution is:
-0.25
./computor "8 * X^0 - 6 * X^1 + 0 * X^2 - 5.6 * X^3 = 3 * X^0"
Reduced form: 5 * X^0 - 6 * X^1 + 0 * X^2 - 5.6 * X^3 = 0
Polynomial degree: 3
The polynomial degree is strictly greater than 2, I can't solve.

1 choix langage : en python ? ou c++ ? ou autre (genre rust)?
2 main : 
> pas de gestion d'erreur sur les arguments envoyes
> envoie sur fct parsing qui retourne une nouvelle string sous la forme reduite 
+ prévoir au départ une fct "specialcase" pour les cas ou x = x (cf sujet)
> envoie sur fct compteur qui retourne le degre polynomial de l'équation (peut-etre renvoye aussi par fct parsing?)
> envoie sur fct calcul qui retourne : 
    - un commentaire sur l'equation (cf exemples du rendu attendu)
    - le.s résultat.s s'il y en a
    - si pas de resultat, ne rien afficher